{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","selectedKey","setSelectedKey","handleKey","event","key","useEffect","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,SAACC,GACjBF,EAAeE,EAAMC,MASvB,OANAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,kBAAMI,SAASE,oBAAoB,QAASN,MAClD,IAGD,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEGT,EAAW,mCACkBA,EADlB,KAGV,+B,MCjBVU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.0de5d6f2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [selectedKey, setSelectedKey] = useState('');\n\n  const handleKey = (event: KeyboardEvent) => {\n    setSelectedKey(event.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKey);\n\n    return () => document.removeEventListener('keyup', handleKey);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n\n        {selectedKey ? (\n          `The last pressed key is [${selectedKey}]`\n        ) : (\n          'Nothing was pressed yet'\n        )}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}